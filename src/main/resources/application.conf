my-app {
  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
}

RedisSearch = {
    protocol = "redis"
    host = "0.0.0.0"
    port = 6379
}

bind-rest {
  host = "localhost"
  host = ${?HOSTNAME}
  port = "8080"
  port = ${?PORT}
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s
  }
}

akka.cluster.min-nr-of-members = 1


akka.cluster.role {
  JsonPipeline.min-nr-of-members = 3
}

akka.actor.deployment {
  /JsonPipeline {
    # Router type provided by metrics extension.
    router = adaptive-group
    # Router parameter specific for metrics extension.
    # metrics-selector = heap
    # metrics-selector = load
    # metrics-selector = cpu
    metrics-selector = mix
    #
    nr-of-instances = 100
    routees.paths = ["/user/JsonPipeline"]
    cluster {
      enabled = on
      use-role = backend
      allow-local-routees = off
    }
  }
}